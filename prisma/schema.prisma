generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  fullName  String
  profile   String?
  email     String   @unique
  password  String
  status    UserStatus @default(Pending)
  roleId    String?
  role      Role?    @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role{
  id            String @id @default(uuid())
  name          String
  description   String?
  status        RoleStatus  @default(System)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User[]

  permissions   RolePermission[]
}


model Permission{
  id            String @id @default(uuid())
  moduleId      String?
  module        Module? @relation(fields: [moduleId], references: [id]) 
  name          String
  slug          String?
  status        Boolean  @default(true)
  description   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  roles         RolePermission[]
}

model Module{
  id            String @id @default(uuid())
  name          String
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  permissions   Permission[]
}

model RolePermission{
  id            String @id @default(uuid())
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        String
  permission    Permission @relation(fields: [permissionId], references: [id])
  permissionId  String
  assignedAt    DateTime @default(now())
  assignedBy    String?

  @@unique([roleId, permissionId])
  @@index([roleId, permissionId])
}


enum UserStatus {
  Pending
  Active
}

enum RoleStatus {
  System
  User
}

